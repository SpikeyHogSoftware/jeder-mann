{"version":3,"file":"js/page-legal-about.86a59f7d.js","mappings":"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","sources":["webpack://jeder-mann-vue-frontend/../../../src/components/VSkeletonLoader/VSkeletonLoader.tsx","webpack://jeder-mann-vue-frontend/./src/pages/legal/about.vue","webpack://jeder-mann-vue-frontend/./src/pages/legal/about.vue?c640"],"sourcesContent":["// Styles\nimport './VSkeletonLoader.sass'\n\n// Composables\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { useLocale } from '@/composables/locale'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, propsFactory, useRender, wrapInArray } from '@/util'\n\n// Types\nimport type { PropType, VNode } from 'vue'\n\ntype VSkeletonBone<T> = T | VSkeletonBone<T>[]\n\nexport type VSkeletonBones = VSkeletonBone<VNode>\nexport type VSkeletonLoaderType = keyof typeof rootTypes\n\nexport const rootTypes = {\n  actions: 'button@2',\n  article: 'heading, paragraph',\n  avatar: 'avatar',\n  button: 'button',\n  card: 'image, heading',\n  'card-avatar': 'image, list-item-avatar',\n  chip: 'chip',\n  'date-picker': 'list-item, heading, divider, date-picker-options, date-picker-days, actions',\n  'date-picker-options': 'text, avatar@2',\n  'date-picker-days': 'avatar@28',\n  divider: 'divider',\n  heading: 'heading',\n  image: 'image',\n  'list-item': 'text',\n  'list-item-avatar': 'avatar, text',\n  'list-item-two-line': 'sentences',\n  'list-item-avatar-two-line': 'avatar, sentences',\n  'list-item-three-line': 'paragraph',\n  'list-item-avatar-three-line': 'avatar, paragraph',\n  ossein: 'ossein',\n  paragraph: 'text@3',\n  sentences: 'text@2',\n  subtitle: 'text',\n  table: 'table-heading, table-thead, table-tbody, table-tfoot',\n  'table-heading': 'chip, text',\n  'table-thead': 'heading@6',\n  'table-tbody': 'table-row-divider@6',\n  'table-row-divider': 'table-row, divider',\n  'table-row': 'text@6',\n  'table-tfoot': 'text@2, avatar@2',\n  text: 'text',\n} as const\n\nfunction genBone (type: string, children: VSkeletonBones = []) {\n  return (\n    <div\n      class={[\n        'v-skeleton-loader__bone',\n        `v-skeleton-loader__${type}`,\n      ]}\n    >\n      { children }\n    </div>\n  )\n}\n\nfunction genBones (bone: string) {\n  // e.g. 'text@3'\n  const [type, length] = bone.split('@') as [VSkeletonLoaderType, number]\n\n  // Generate a length array based upon\n  // value after @ in the bone string\n  return Array.from({ length }).map(() => genStructure(type))\n}\n\nfunction genStructure (type?: string): VSkeletonBones {\n  let children: VSkeletonBones = []\n\n  if (!type) return children\n\n  // TODO: figure out a better way to type this\n  const bone = (rootTypes as Record<string, string>)[type]\n\n  // End of recursion, do nothing\n  /* eslint-disable-next-line no-empty, brace-style */\n  if (type === bone) {}\n  // Array of values - e.g. 'heading, paragraph, text@2'\n  else if (type.includes(',')) return mapBones(type)\n  // Array of values - e.g. 'paragraph@4'\n  else if (type.includes('@')) return genBones(type)\n  // Array of values - e.g. 'card@2'\n  else if (bone.includes(',')) children = mapBones(bone)\n  // Array of values - e.g. 'list-item@2'\n  else if (bone.includes('@')) children = genBones(bone)\n  // Single value - e.g. 'card-heading'\n  else if (bone) children.push(genStructure(bone))\n\n  return [genBone(type, children)]\n}\n\nfunction mapBones (bones: string) {\n  // Remove spaces and return array of structures\n  return bones.replace(/\\s/g, '').split(',').map(genStructure)\n}\n\nexport const makeVSkeletonLoaderProps = propsFactory({\n  boilerplate: Boolean,\n  color: String,\n  loading: Boolean,\n  loadingText: {\n    type: String,\n    default: '$vuetify.loading',\n  },\n  type: {\n    type: [String, Array] as PropType<\n      | VSkeletonLoaderType | (string & {})\n      | ReadonlyArray<VSkeletonLoaderType | (string & {})>\n    >,\n    default: 'ossein',\n  },\n\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  ...makeThemeProps(),\n}, 'VSkeletonLoader')\n\nexport const VSkeletonLoader = genericComponent()({\n  name: 'VSkeletonLoader',\n\n  inheritAttrs: false,\n\n  props: makeVSkeletonLoaderProps(),\n\n  setup (props, { attrs, slots }) {\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(() => props.color)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { themeClasses } = provideTheme(props)\n    const { t } = useLocale()\n\n    const items = computed(() => genStructure(wrapInArray(props.type).join(',')))\n\n    useRender(() => {\n      const isLoading = !slots.default || props.loading\n      const loadingProps = (props.boilerplate || !isLoading) ? {} : {\n        ariaLive: 'polite',\n        ariaLabel: t(props.loadingText),\n        role: 'alert',\n      }\n\n      return isLoading\n        ? (\n          <div\n            class={[\n              'v-skeleton-loader',\n              {\n                'v-skeleton-loader--boilerplate': props.boilerplate,\n              },\n              themeClasses.value,\n              backgroundColorClasses.value,\n              elevationClasses.value,\n            ]}\n            style={[\n              backgroundColorStyles.value,\n              dimensionStyles.value,\n            ]}\n            { ...loadingProps }\n            { ...attrs }\n          >\n            { items.value }\n          </div>\n        )\n        : <>{ slots.default?.() }</>\n    })\n\n    return {}\n  },\n})\n\nexport type VSkeletonLoader = InstanceType<typeof VSkeletonLoader>\n","<template>\r\n  <v-card>\r\n    <v-row class=\"my-2\"  :class=\"{'flex-row-reverse': !$vuetify.display.mobile}\" justify=\"center\" align=\"center\">\r\n      <v-col\r\n        :cols=\"$vuetify.display.mobile ? 12 : 7\"\r\n        align=\"start\"\r\n        ><v-card-title class=\"text-h4\">{{ $t(\"legal.about.title\") }}</v-card-title\r\n        ><v-card-text\r\n          ><div class=\"markdown-content\" v-html=\"parseMarkdown(policyContent)\"></div></v-card-text\r\n      ></v-col>\r\n      <v-col\r\n          :cols=\"$vuetify.display.mobile ? 12 : 4\"\r\n        ><v-img\r\n  max-height=\"60vh\"\r\n  :src=\"require('@/assets/images/Henrik Weiss.png')\"\r\n  cover\r\n  aspect-ratio=\"3/4\"\r\n>\r\n  <template v-slot:placeholder>\r\n    <div class=\"d-flex align-center justify-center\" style=\"height: 100%\">\r\n      <v-skeleton-loader type=\"image\" color=\"accent\" />\r\n    </div>\r\n  </template>\r\n</v-img></v-col>\r\n    </v-row>\r\n  </v-card>\r\n</template>\r\n\r\n<script>\r\nimport { marked } from \"marked\";\r\nexport default {\r\n  name: \"AboutPage\",\r\n  data() {\r\n    return {\r\n      policyContent: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    parseMarkdown(markdown) {\r\n      return marked(markdown, {\r\n        breaks: true,\r\n        gfm: true,\r\n        tables: true,\r\n        smartLists: true,\r\n        smartypants: true,\r\n        xhtml: true,\r\n        pedantic: false,\r\n      });\r\n    },\r\n    async loadMarkdownFile() {\r\n      const url = await import(\"@/assets/policies/de/about.md\");\r\n      this.policyContent = url.default;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.loadMarkdownFile();\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n.markdown-content :deep(p) {\r\n  margin-top: 5pt;\r\n  margin-bottom: 5pt;\r\n}\r\n</style>\r\n","import { render } from \"./about.vue?vue&type=template&id=5946a03e&scoped=true\"\nimport script from \"./about.vue?vue&type=script&lang=js\"\nexport * from \"./about.vue?vue&type=script&lang=js\"\n\nimport \"./about.vue?vue&type=style&index=0&id=5946a03e&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5946a03e\"]])\n\nexport default __exports__"],"names":["rootTypes","actions","article","avatar","button","card","chip","divider","heading","image","ossein","paragraph","sentences","subtitle","table","text","genBone","type","children","arguments","length","undefined","_createElementVNode","_normalizeClass","genBones","bone","split","Array","from","map","genStructure","includes","mapBones","push","bones","replace","makeVSkeletonLoaderProps","propsFactory","boilerplate","Boolean","color","String","loading","loadingText","default","makeDimensionProps","makeElevationProps","makeThemeProps","VSkeletonLoader","genericComponent","name","inheritAttrs","props","setup","_ref","attrs","slots","backgroundColorClasses","backgroundColorStyles","useBackgroundColor","dimensionStyles","useDimension","elevationClasses","useElevation","themeClasses","provideTheme","t","useLocale","items","computed","wrapInArray","join","useRender","isLoading","loadingProps","ariaLive","ariaLabel","role","_mergeProps","value","_Fragment","class","style","_createBlock","_component_v_card","_withCtx","_createVNode","_component_v_row","_ctx","$vuetify","display","mobile","justify","align","_component_v_col","cols","_component_v_card_title","_createTextVNode","_toDisplayString","$t","_","_component_v_card_text","innerHTML","$options","parseMarkdown","$data","policyContent","_hoisted_1","_component_v_img","src","require","cover","placeholder","_hoisted_2","_component_v_skeleton_loader","data","methods","markdown","marked","breaks","gfm","tables","smartLists","smartypants","xhtml","pedantic","loadMarkdownFile","url","this","mounted","__exports__","render"],"sourceRoot":""}